<%@ include file="common_vars.psp" %>

<%
dev_queue_content = """
Job id                    Name             User            Time Use S Queue
------------------------- ---------------- --------------- -------- - -----
230938.growler            84481            wwwuser         00:00:02 R no_bad_touching
231247.growler            84497            wwwuser         01:03:47 R singleq        
231249.growler            84499            wwwuser                0 Q singleq        
231282.growler            84510            wwwuser                0 Q singleq        
231285.growler            84512            wwwuser                0 Q singleq
"""

from commands import getoutput
from time import sleep

queue_content = getoutput('qstat')
# If command not found, must be on dev serve. Use dev content.
if 'command not found' in queue_content:
    queue_content = 'DEV CONTENT: {0}'.format(dev_queue_content)
if queue_content == '' or queue_content == None:
    req.write('<pre>Queue is empty.</pre>')
else:
    req.write('<pre>{0}</pre>'.format(queue_content))

items = queue_content.split()
sql = """
select  s.study_id, s.project_name,
        case
            when tj.job_type_id  in (3, 12, 15) then 'study'
            else 'meta'
        end as job_type
from    study s
        inner join sff.torque_job tj
        on s.study_id = tj.study_id
where   tj.job_id = {0}
order by tj.job_id
"""
prev_item = ''
for item in items:
    if 'growler' in prev_item and item.isdigit():
        results = ag_data_access.dynamicMetadataSelect(sql.format(item)).fetchone()
        # Results will be None if it's a meta-analysis
        if results == None or results[2] == 'meta':
            req.write('Job ID {0} is a Meta-Analysis<br/>'.format(item))
        else:
            study_id, project_name, job_type = results
            req.write('Job ID {0} belongs to study {1} ({2})<br/>'.format(item, project_name, study_id))
    prev_item = item
# End for
%>
